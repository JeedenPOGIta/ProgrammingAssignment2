{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "1cb1994a-7908-4c32-af9c-a90fb1750c45",
   "metadata": {},
   "source": [
    "# Programming Assignment 2 - Normalization problem"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1ad377bf-5a3b-40c6-87cb-c533dbb6c072",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Normalization is one of the most basic preprocessing techniques in\n",
    "# data analytics. This involves centering and scaling process. Centering means subtracting the data from the\n",
    "# mean and scaling means dividing with its standard deviation. Mathematically, normalization can be\n",
    "# expressed as: z = (X - x bar)/standard deviation\n",
    "\n",
    "# In Python, element-wise mean and element-wise standard deviation can be obtained by using .mean() and\n",
    "# .std() calls.\n",
    "# In this problem, create a random 5 x 5 ndarray and store it to variable X. Normalize X. Save your normalized\n",
    "# ndarray as X_normalized.npy"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09cfba1b-f3f2-4e0a-912d-a917ff560d14",
   "metadata": {},
   "source": [
    "### [START OF CODE]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "823cbd9f-d3e7-4382-9048-31d55bb44bb0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The randomly generated array is: \n",
      "\n",
      "[[242 914 721 988 293]\n",
      " [ 83 289 655  45 110]\n",
      " [391 869 975 225 367]\n",
      " [696 342   4 879 536]\n",
      " [160 627  52 299 690]]\n",
      "\n",
      "The mean of the array is: 458.08\n",
      "\n",
      "The standard deviation of the array is: 313.4115\n",
      "\n",
      "The normalized value of the array is: \n",
      "\n",
      " [[-0.68944503  1.45470093  0.8388971   1.69081224 -0.52671966]\n",
      " [-1.19676528 -0.53948244  0.62831134 -1.31801162 -1.11061655]\n",
      " [-0.21403171  1.31111973  1.64933322 -0.74368681 -0.29060835]\n",
      " [ 0.75912977 -0.37037569 -1.44883005  1.34302666  0.24861883]\n",
      " [-0.95108188  0.53897193 -1.29567677 -0.5075755   0.73998561]] \n"
     ]
    }
   ],
   "source": [
    "# Import numpy in the code\n",
    "import numpy as np\n",
    "\n",
    "# Random 5x5 array - change to integers using .randint\n",
    "X = np.random.randint(0,999, size = (5,5))\n",
    "\n",
    "#Display the array\n",
    "print(\"The randomly generated array is: \")\n",
    "print(\"\")\n",
    "print(X)\n",
    "\n",
    "#Get the mean of X using .mean()\n",
    "print(\"\")\n",
    "mean = X.mean()\n",
    "print(f\"The mean of the array is: {mean}\")\n",
    "\n",
    "#Centering X - x bar\n",
    "centering = X - mean\n",
    "\n",
    "#Standard deviation\n",
    "sd = round(centering.std(),4)\n",
    "\n",
    "print(\"\")\n",
    "print(f\"The standard deviation of the array is: {sd}\")\n",
    "\n",
    "#Normalization\n",
    "X_normalized = centering/sd\n",
    "\n",
    "#Output\n",
    "print(\"\")\n",
    "print(f\"The normalized value of the array is: \\n\\n {X_normalized} \")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cfcca3a9-8d99-4a44-beb2-5edc285d96ca",
   "metadata": {},
   "source": [
    "### [END OF CODE"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
